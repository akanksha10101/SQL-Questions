A partition is a small piece of a database table. 
That object is created by partitioning a table. 
Partitioning allows tables, indexes, or index-organized tables to be subdivided into smaller, manageable pieces. 
Each partition has its name and possibly its storage characteristics.

Types of Partitioning

        1. Range Partitioning
            Rows are partitioned based on a range of values in a column.
        
          CREATE TABLE sales (
            sale_id INT,
            sale_date DATE,
            amount DECIMAL(10,2)
        )
        PARTITION BY RANGE (YEAR(sale_date)) (
            PARTITION p2022 VALUES LESS THAN (2023),
            PARTITION p2023 VALUES LESS THAN (2024),
            PARTITION pmax  VALUES LESS THAN (MAXVALUE)
        );
    
        
        2. List Partitioning
             Rows are partitioned by specific values in a column.
        
            
        CREATE TABLE customers (
            cust_id INT,
            region VARCHAR(20)
        )
        PARTITION BY LIST (region) (
            PARTITION east  VALUES IN ('East'),
            PARTITION west  VALUES IN ('West'),
            PARTITION north VALUES IN ('North'),
            PARTITION south VALUES IN ('South')
        );
        
        3. Hash Partitioning
        
        Rows are distributed evenly across partitions using a hash function.
        
              
        CREATE TABLE orders (
            order_id INT,
            customer_id INT
        )
        PARTITION BY HASH (customer_id)
        PARTITIONS 4; 
        
        4. Composite Partitioning
        
        Combination of partitioning methods (e.g., range + hash).
        
        CREATE TABLE employee_logs (
            emp_id INT,
            log_date DATE,
            activity VARCHAR(200)
        )
        PARTITION BY RANGE (YEAR(log_date))
        SUBPARTITION BY HASH(emp_id)
        SUBPARTITIONS 4 (
            PARTITION p2022 VALUES LESS THAN (2023),
            PARTITION p2023 VALUES LESS THAN (2024)
        );
